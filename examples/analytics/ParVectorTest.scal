
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** @author  John Miller
 *  @version 1.0
 *  @date    Wed Jun  6 15:08:14 EDT 2012
 *  @see     LICENSE (MIT style license file).
 *  @compile scalac -cp ../../classes -d classes ParVectorTest.scala
 *           scalac -cp ../../classes -d classes -optimize ParVectorTest.scala
 *  @run     scala -cp ../../classes:classes analytics.ParVectorTest
 */

package analytics

import scalation._
import scalation.random.Uniform

object ParVectorTest extends App
{
    val n   = 1000000
    val rep = 10 
    val ran = Uniform (0., n)
    var t0  = 0l
    var dt  = 0l
    var res = 0.
    var r   = 0.

    val x = new math.Vectors.VectorD (n)
    val y = new parmath.Vectors.VectorD (n)
    for (i <- 0 until n) { r = ran.gen; x(i) = r; y(i) = r }

    println ("Test vector sum --------------------------------------------")

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        res = x.sum
        dt  = System.nanoTime - t0
        println ("Result = " + res + "\tElapsed time (ser) = " + dt + " ns")
    } // for

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        res = y.sum
        dt  = System.nanoTime - t0
        println ("Result = " + res + "\tElapsed time (par) = " + dt + " ns")
    } // for

    println ("Test vector product ----------------------------------------")

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        val prd = x * x
        dt  = System.nanoTime - t0
        println ("Result = " + prd.sum + "\tElapsed time (ser) = " + dt + " ns")
    } // for

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        val prd = y * y
        dt  = System.nanoTime - t0
        println ("Result = " + prd.sum + "\tElapsed time (par) = " + dt + " ns")
    } // for

    println ("Test vector dot product ------------------------------------")

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        res = x dot x
        dt  = System.nanoTime - t0
        println ("Result = " + res + "\tElapsed time (ser) = " + dt + " ns")
    } // for

    for (i <- 0 until rep) {
        t0  = System.nanoTime
        res = y dot y
        dt  = System.nanoTime - t0
        println ("Result = " + res + "\tElapsed time (par) = " + dt + " ns")
    } // for

} // ParVectorTest

