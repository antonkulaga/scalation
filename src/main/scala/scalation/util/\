
package scalation.util

import scala.reflect.runtime.universe._
//import c.universe._)

import scala.reflect.runtime.currentMirror
import scala.tools.reflect.ToolBox


// run-main scalation.util.QuasiQuoteTest 

object QuasiQuoteTest extends App
{
    val BASE = Array (tq"String", tq"Int")
    val ZERO = Array (q""" "zero" """, q"0")
    val ONE  = Array (q""" "one" """, q"1")

    val code = q"""

    val label = Array.ofDim [${BASE(0)}] (2)
    label(0) = ${ZERO(0)}
    label(1) = ${ONE(0)}
    println (label.deep)

    """

    println ("code = " + code)

    val toolbox = currentMirror.mkToolBox ()
    val compiledCode = toolbox.compile (code)
    val result = compiledCode ()
   
} // QuasiQuoteTest

